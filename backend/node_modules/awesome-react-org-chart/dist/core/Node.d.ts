import Box from "./Box";
import NodeLayoutInfo from "./NodeLayoutInfo";
import Func from "./Func";
import Predicate from "./Predicate";
import Action from "./Action";
export default class Node {
    Level: number;
    Element: Box;
    State: NodeLayoutInfo;
    Children: Node[];
    AssistantsRoot: Node | null;
    ParentNode: Node | null;
    get ChildCount(): number;
    get IsAssistantRoot(): boolean;
    AddAssistantChild(child: Node): Node;
    AddRegularChild(child: Node): Node;
    AddRegularChildBox(child: Box): Node;
    InsertRegularChildBox(child: Box): Node;
    InsertRegularChildBoxByIndex(index: number, child: Box): Node;
    InsertRegularChild(index: number, child: Node): Node;
    constructor(element: Box);
    IterateChildFirst(func: Func<Node, boolean>): boolean;
    IterateParentFirst(enter: Predicate<Node>, exit?: Action<Node>): boolean;
    SuppressAssistants(): void;
}
