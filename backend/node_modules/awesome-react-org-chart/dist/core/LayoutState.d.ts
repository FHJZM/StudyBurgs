import Operation from "./Operation";
import LayoutStateOperationChangedEventArgs from "./LayoutStateOperationChangedEventArgs";
import Func from "./Func";
import LayoutLevel from "./LayoutLevel";
import Diagram from "./Diagram";
import Size from "./Size";
import BoxTree from "./BoxTree";
import Node from "./Node";
import BoundaryChangedEventArgs from "./BoundaryChangedEventArgs";
import EventHandler from "./EventHandler";
export default class LayoutState {
    private _currentOperation;
    get CurrentOperation(): Operation;
    set CurrentOperation(value: Operation);
    private _layoutStack;
    private _pooledBoundaries;
    Diagram: Diagram;
    BoxSizeFunc: Func<string | null, Size> | null;
    LayoutOptimizerFunc: Func<Node, string | null> | null;
    BoundaryChanged: EventHandler<LayoutState, BoundaryChangedEventArgs> | null;
    OperationChanged: EventHandler<LayoutState, LayoutStateOperationChangedEventArgs> | null;
    constructor(diagram: Diagram);
    AttachVisualTree(tree: BoxTree): void;
    PushLayoutLevel(node: Node): LayoutLevel;
    MergeSpacer(spacer: Node): void;
    PopLayoutLevel(): void;
}
