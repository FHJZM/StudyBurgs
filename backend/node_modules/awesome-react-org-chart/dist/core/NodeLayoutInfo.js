"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var Size_1 = __importDefault(require("./Size"));
var Point_1 = __importDefault(require("./Point"));
var Dimensions_1 = __importDefault(require("./Dimensions"));
var Rect_1 = __importDefault(require("./Rect"));
var NodeLayoutInfo = /** @class */ (function () {
    function NodeLayoutInfo() {
        this._effectiveLayoutStrategy = null;
        this.IsHidden = false;
        this.Connector = null;
        this.NumberOfSiblings = 0;
        this.NumberOfSiblingRows = 0;
        this.NumberOfSiblingColumns = 0;
        this.Size = new Size_1.default(0, 0);
        this.TopLeft = new Point_1.default(0, 0);
        this.BranchExterior = new Rect_1.default(0, 0, 0, 0);
        this.SiblingsRowV = new Dimensions_1.default(0, 0);
    }
    Object.defineProperty(NodeLayoutInfo.prototype, "EffectiveLayoutStrategy", {
        set: function (value) {
            this._effectiveLayoutStrategy = value;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "RequireLayoutStrategy", {
        get: function () {
            if (this._effectiveLayoutStrategy == null) {
                throw new Error("EffectiveLayoutStrategy is not set");
            }
            return this._effectiveLayoutStrategy;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "Left", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            return this.TopLeft.X;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "Right", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            if (this.Size == null) {
                throw Error("Size is null");
            }
            return this.TopLeft.X + this.Size.Width;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "Top", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            if (this.Size == null) {
                throw Error("Size is null");
            }
            return this.TopLeft.Y;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "Bottom", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            if (this.Size == null) {
                throw Error("Size is null");
            }
            return this.TopLeft.Y + this.Size.Height;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "CenterH", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            if (this.Size == null) {
                throw Error("Size is null");
            }
            return this.TopLeft.X + this.Size.Width / 2;
        },
        enumerable: false,
        configurable: true
    });
    Object.defineProperty(NodeLayoutInfo.prototype, "CenterV", {
        get: function () {
            if (this.TopLeft == null) {
                throw Error("TopLeft is null");
            }
            if (this.Size == null) {
                throw Error("Size is null");
            }
            return this.TopLeft.Y + this.Size.Height / 2;
        },
        enumerable: false,
        configurable: true
    });
    return NodeLayoutInfo;
}());
exports.default = NodeLayoutInfo;
